//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   row_major float4x4 worldViewProjection;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 world;          // Offset:   64 Size:    64 [unused]
//   float4 lightColor;                 // Offset:  128 Size:    16
//   float4 lightDir;                   // Offset:  144 Size:    16
//
// }
//
// cbuffer MATERIAL_CONSTANT_BUFFER
// {
//
//   float4 ambient;                    // Offset:    0 Size:    16 [unused]
//   float4 bump;                       // Offset:   16 Size:    16 [unused]
//   float4 diffuse;                    // Offset:   32 Size:    16
//   float4 emissive;                   // Offset:   48 Size:    16 [unused]
//   float4 specular;                   // Offset:   64 Size:    16 [unused]
//   float shininess;                   // Offset:   80 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuseSampler                    sampler      NA          NA             s0      1 
// diffuseMap                        texture  float4          2d             t0      1 
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
// MATERIAL_CONSTANT_BUFFER          cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             8         2  ( FLT, FLT, FLT, FLT)
// c2         cb1             2         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c3, -0, 0, -1, 1
    dcl t1  // pin<8,9,10,11>
    dcl t2.xy  // pin<12,13>
    dcl_2d s0

#line 27 "D:\学校関連\VS_Projects\FBXLex\Lex\Lex\Shader\SkinnedMeshPS.hlsl"
    mov r0, -c1
    dp4 r1.w, r0, r0
    rsq r1.x, r1.w
    mul r0, r0, r1.x
    dp4 r0.x, t1, r0
    add r0.y, r0.x, c3.x
    cmp r0.x, r0.y, r0.x, c3.y
    add r0.y, r0.x, c3.z
    cmp r0.x, r0.y, c3.w, r0.x  // ::lightPower<0>
    texld r1, t2, s0
    mul r1, r1, c0
    mul r1, r1, c2  // ::surfaceColor<0,1,2,3>
    mul r0, r0.x, r1  // ::main<0,1,2,3>

#line 6
    mov oC0, r0  // ::main<0,1,2,3>

// approximately 14 instruction slots used (1 texture, 13 arithmetic)
ps_4_0
dcl_constantbuffer CB0[10], immediateIndexed
dcl_constantbuffer CB1[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- pin.pos.x; v0.y <- pin.pos.y; v0.z <- pin.pos.z; v0.w <- pin.pos.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; v2.w <- pin.normal.w; 
//   v3.x <- pin.texCoord.x; v3.y <- pin.texCoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 26 "D:\学校関連\VS_Projects\FBXLex\Lex\Lex\Shader\SkinnedMeshPS.hlsl"
mov r0.xyzw, -cb0[9].xyzw
dp4 r1.x, r0.xyzw, r0.xyzw
rsq r1.x, r1.x
mul r0.xyzw, r0.xyzw, r1.xxxx
dp4 r0.x, v2.xyzw, r0.xyzw
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(1.000000)  // r0.x <- lightPower

#line 28
sample r1.xyzw, v3.xyxx, t0.xyzw, s0
mul r1.xyzw, r1.xyzw, cb0[8].xyzw
mul r1.xyzw, r1.xyzw, cb1[2].xyzw  // r1.x <- surfaceColor.x; r1.y <- surfaceColor.y; r1.z <- surfaceColor.z; r1.w <- surfaceColor.w

#line 31
mul o0.xyzw, r0.xxxx, r1.xyzw
ret 
// Approximately 12 instruction slots used
